plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    namespace 'com.appscentric.donot.touch.myphone.antitheft'
    compileSdk 35
    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    defaultConfig {
        applicationId "com.appscentric.donot.touch.myphone.antitheft"
        minSdk 27
        targetSdk 35
        versionCode 43
        versionName "1.4.3"
        resourceConfigurations += ['en', 'hi', 'es', 'pt', 'ko', 'fr', 'zh']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            resValue 'string', 'admob_app_id', '"ca-app-pub-8328414263134425~9663420722"'
            resValue 'string', 'admob_app_open_ids', '"ca-app-pub-8328414263134425/7130225339"'
            resValue 'string', 'admob_interstitial_id', '"ca-app-pub-8328414263134425/1784930701"'
            resValue 'string', 'admob_rewarded_id', '"ca-app-pub-8328414263134425/9756388675"'
            resValue 'string', 'admob_banner_ids', '"ca-app-pub-8328414263134425/7022414122"'
            resValue 'string', 'admob_collapsable_banner_ids', '"ca-app-pub-8328414263134425/9413576078"'
            resValue 'string', 'admob_small_native_ids', '"ca-app-pub-8328414263134425/9013001262"'
            resValue 'string', 'admob_large_native_ids', '"ca-app-pub-8328414263134425/1386354731"'
            resValue 'string', 'admob_square_native_ids', '"ca-app-pub-8328414263134425/1066810981"'

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            resValue 'string', 'admob_app_id', '"ca-app-pub-8328414263134425~9663420722"'
            resValue 'string', 'admob_app_open_ids', '"ca-app-pub-8328414263134425/7130225339"'
            resValue 'string', 'admob_interstitial_id', '"ca-app-pub-8328414263134425/1784930701"'
            resValue 'string', 'admob_rewarded_id', '"ca-app-pub-8328414263134425/9756388675"'
            resValue 'string', 'admob_banner_ids', '"ca-app-pub-8328414263134425/7022414122"'
            resValue 'string', 'admob_collapsable_banner_ids', '"ca-app-pub-8328414263134425/9413576078"'
            resValue 'string', 'admob_small_native_ids', '"ca-app-pub-8328414263134425/9013001262"'
            resValue 'string', 'admob_large_native_ids', '"ca-app-pub-8328414263134425/1386354731"'
            resValue 'string', 'admob_square_native_ids', '"ca-app-pub-8328414263134425/1066810981"'

            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                def appName = "Touch-Alert-App"
                def date = new Date()
                def formattedDate = date.format('dd-MM')
                Calendar calendar = GregorianCalendar.getInstance()

                def hour = calendar.get(Calendar.HOUR_OF_DAY)
                def minute = calendar.get(Calendar.MINUTE)
                outputFileName = appName + "__${variant.versionName}" + "__${formattedDate}__${hour}h${minute}" + ".apk"
            }
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'//, 'arm64-v8a', 'x86', 'x86_64'
            universalApk false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.lifecycle.process
    implementation libs.firebase.crashlytics
    implementation libs.firebase.analytics
    implementation libs.firebase.messaging
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    implementation(libs.play.services.ads)
    implementation(libs.androidx.sdp)
    implementation(libs.androidx.ssp)
    implementation(libs.lottie)
    implementation(libs.dotsindicator)
    implementation(libs.showcaseview)
    implementation(libs.lifecycle)
    implementation(libs.easylocale)
    implementation libs.review

    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android
    implementation libs.koin.android
    implementation(libs.user.messaging.platform)
    implementation libs.ios.switchview
//    debugImplementation libs.leakcanary.android
    implementation libs.pin.view

    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.paging.runtime
    implementation libs.glide

    implementation(libs.billing)
    implementation libs.listenablefuture
    implementation libs.guava

    implementation(libs.app.update)

    implementation libs.androidx.camera.core
    implementation libs.androidx.camera.camera2
    implementation libs.androidx.camera.lifecycle
    implementation libs.androidx.camera.view
}